{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "GreenPot Food Services",
        "description": "GreenPot food services brings the food you love to your doorstep"
    },
    "servers": [
        {
          "url": "http://localhost:3000/"
        },
        {
          "url": "https://greenpot-api.herokuapp.com/"
        }
      ],
    "host": "",
    "basePath": "/v1.0/api",
    "securityDefinitions": {
        "Bearer": {
            "description": "Standard Authorization header using the bearer scheme. Example: \"bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Endpoint for Authentication"
        }
    ],
    "paths": {
        "/auth/signup": {
            "post": {
                "description": "Register a User",
                "summary": "Registers new user to greenpot database",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user information",
                        "schema": {
                            "$ref": "#/requestBody/userRegistration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Please fill in the fields"
                    },
                    "409": {
                        "description": "User with email already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login an existing user",
                "summary": "Login a user to the application",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing login information",
                        "schema": {
                            "$ref": "#/requestBody/userLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User login successfully"
                    },
                    "401": {
                        "description": "invalid inputs"
                    },
                    "404": {
                        "description": "User with email does not exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "reset password of a logged in user",
                "summary": "A user that's logged in should be able to reset his/her password",
                "tags": [
                    "Auth"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing password reset information",
                        "schema": {
                            "$ref": "#/requestBody/passwordReset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Passwords changed succesfully"
                    },
                    "401": {
                        "description": "invalid inputs"
                    },
                    "404": {
                        "description": "User does not exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/profile/{userId}": {
            "put": {
                "description": "Updates a single user profile",
                "summary": "User can update the profile details",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "The Id of the user to be updated"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user update",
                        "schema": {
                            "$ref": "#/requestBody/updateProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/profile/{userId}/": {
            "get": {
                "description": "get a users profile",
                "summary": "User can get his profile from the database",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "The id of the user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Authorization required"
                    },
                    "404": {
                        "description": "User Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{userId}": {
            "delete": {
                "description": "Deletes a single user profile",
                "summary": "Users can delete their profile",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "description": "The Id of the user to be delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        },
        "/user/assign-role": {
            "patch":{
                "description": "user roles can be set by a superAdmin given the right parameters",
                "summary": "A User's role can be set to either user or admin",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user role setting",
                        "schema": {
                            "$ref": "#/requestBody/assign-role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        },
        "/user/assign-super": {
            "patch":{
                "description": "Assign super admin to application",
                "summary": "A Super admin can be assinged to application",
                "tags": [
                    "Users"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing user role setting",
                        "schema": {
                            "$ref": "#/requestBody/assign-super"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        },
        "/ingredient": {
            "post": {
                "description": "Add ingredient",
                "summary": "An admin can add a new ingredient to the database",
                "tags": [
                    "Ingredient"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing ingredient values",
                        "schema": {
                            "$ref": "#/requestBody/add-ingredient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        },
        "/ingredient/{Id}": {
            "patch": {
                "description": "edit ingredient",
                "summary": "An admin can edit an ingredient",
                "tags": [
                    "Ingredient"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "description": "The Id of the ingredient to be updated"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "description": "This is the request body object containing ingredient values",
                        "schema": {
                            "$ref": "#/requestBody/add-ingredient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        },
        "/ingredient/all": {
            "get": {
                "description": "Get ingredient",
                "summary": "An admin can get all ingredients in the database",
                "tags": [
                    "Ingredient"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        },
        "/ingredient/{id}/": {
            "delete": {
                "description": "Delete an ingredient",
                "summary": "An admin can delete an ingredient in the database",
                "tags": [
                    "Ingredient"
                ],
                "produces": [
                    "application/json"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "Id",
                        "required": true,
                        "description": "The Id of the ingredient to be updated"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Authorization required"
                    }
                }
            }
        }
    },
    "requestBody": {
        "userRegistration": {
            "title": "User registration request",
            "type": "object",
            "properties": {
                "firstName": {
                    "description": "First name of the user",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name of the user",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the user",
                    "type": "string"
                },
                "password": {
                    "description": "The Password of the user",
                    "type": "string"
                },
                "birthDate": {
                    "description": "The date of birth of user",
                    "type": "date"
                },
                "gender": {
                    "description": "The user's gender",
                    "type": "string"

                },
                "phoneNumber": {
                    "description": "The user's phone number",
                    "type": "string"
                },
                "addressLine1": {
                    "description": "The user's address",
                    "type": "string"
                },
                "addressLine2": {
                    "description": "The user's address",
                    "type": "string"
                },
                "city": {
                    "description": "The user's city",
                    "type": "string"
                },
                "state": {
                    "description": "The user's state",
                    "type": "string"
                },
                "country": {
                    "description": "The user's country",
                    "type": "string"
                }
            },
            "example": {
                "firstName": "King",
                "lastName": "David",
                "email": "david@gmail.com",
                "password": "Elija455h",
                "gender": "male",
                "birthDate": "2010-01-01",
                "phoneNumber": "08063345598",
                "addressLine1": "No 34, cintro street",
                "addressLine2": "Northpoint drive Allen",
                "city": "Gidi",
                "state": "Lagos",
                "country": "Nigeria"
                },
            "required": [
                "firstName, lastName, email, password"
            ]
        },
        "userLogin": {
            "title": "User login request",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email of the user",
                    "type": "string"
                },
                "password": {
                    "description": "The Password of the user",
                    "type": "string"
                }
            },
            "example": {
                "email": "david@gmail.com",
                "password": "Elija455h"
                },
            "required": [
                "email, password"
            ]
        },
        "passwordReset": {
            "title": "User password reset request",
            "type": "object",
            "properties": {
                "password": {
                    "description": "The new Password of the user",
                    "type": "string"
                },
                "confirmPassword": {
                    "description": "The new Password of the user",
                    "type": "string"
                }
            },
            "example": {
                "password": "defc34.Ase",
                "confirmPassword": "defc34.Asedd"
            },
            "required": [
                "password, confirmPassword"
            ]
        },
        "updateProfile": {
            "title": "Update User",
            "type": "object",
            "properties": {
                "firstName": {
                    "description": "First name of the user",
                    "type": "string"
                },
                "lastName": {
                    "description": "Last name of the user",
                    "type": "string"
                },
                "gender": {
                    "description": "Use gender",
                    "type": "integer"
                }
            },
            "example": {
                "firstName": "first name",
                "lastName": "last name",
                "gender": "male"
            }
        },
        "assign-role":{
            "title": "User Role Setting",
            "type": "object",
            "properties":{
                "roleId": {
                    "description": "id correspondin to role",
                    "type": "integer"
                },
                "email": {
                    "description": "email of user to be set",
                    "type": "string"
                }
            },
            "example": {
                "roleId": 2,
                "email": "danny@greenpot.com"
            },
            "required": [
                "roleId, adminKey"
            ]
        },
        "assign-super":{
            "title": "Super Admin Role Setting",
            "type": "object",
            "properties":{
                "adminKey": {
                    "description": "Administrator key needed to set role",
                    "type": "string"
                }
            },
            "example": {
                "adminKey": "ADMIN_KEY"
            },
            "required": [
                "adminKey"
            ]
        },
        "add-ingredient": {
            "title": "add / edit an ingredient to/in database",
            "type": "object",
            "properties":{
                "name": {
                    "description": "ingredient name",
                    "type": "string"
                },
                "unit": {
                    "description": "ingredient unit (litre/gram)",
                    "type": "string"
                }
            },
            "example": {
                "name": "fish",
                "unit": "50 grams"
            },
            "required": [
                "name"
            ]
        }
    }
}
    